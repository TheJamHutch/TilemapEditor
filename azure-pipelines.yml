# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
    - '*'

variables:
  azureSubscription: 'ba6e1630-d997-4f12-8308-6df3b9856477'
  environmentName: 'tilegame'
  webAppName: 'tilemapeditor'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
    - job: BuildApp
      pool:
        vmImage: 'ubuntu-20.04'
      steps:

        - task: NodeTool@0
          inputs:
            versionSpec: '16.x'
          displayName: 'Install Node.js'
        - script: |
            npm install -g @angular/cli
            npm install
            npm run build
            ls $(System.DefaultWorkingDirectory)
          displayName: 'npm install and build'

        - task: ArchiveFiles@2
          displayName: 'Archive files'
          inputs:
            rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/TilemapEditor/'
            includeRootFolder: false
            archiveType: zip
            archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            replaceExistingArchive: true
  
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            ArtifactName: 'drop'
            publishLocation: 'Container'

  - stage: Deploy
    displayName: 'Deploy Web App'
    dependsOn: Build
    condition: succeeded()
    jobs:
    - deployment: DeploymentJob
      pool:
        vmImage: 'ubuntu-20.04'
      environment: $(environmentName)
      strategy:
        runOnce:
          deploy:
            steps:
       
            - task: AzureWebApp@1
              displayName: 'Deploy Azure Web App : $(webAppName)'
              inputs:
                azureSubscription: $(azureSubscription)
                appName: $(webAppName)
                appType: webAppLinux
                package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip 